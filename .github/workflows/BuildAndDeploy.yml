on:
  workflow_call:
    inputs:
      CONTAINER_NAME:
        required: true
        type: string
    secrets:
      DBConnection:
        required: true
      APP_INSIGHTS:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

env:
  AZURE_CONTAINER_REGISTRY: "warshipregistry"
  DOCKER_PATH: "./Dockerfile"
  APPSETTINGS_PATH: "./appsettings.json"
  CLUSTER_NAME: "aks"

jobs:
  BuildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    env:
      RESOURCE_GROUP: "CombatWarships"
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3
          
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build -f ${{env.DOCKER_PATH}} --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ inputs.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .

  ProductionDeploy: 
    permissions:
      actions: read
      contents: read
      id-token: write  
    uses: CombatWarships/DevOps/.github/workflows/Deploy.yml@main
    with:
      ENVIRONMENT: Production
      CONTAINER_NAME: ${{ inputs.CONTAINER_NAME }}
    secrets: 
      DBConnection: none    
      APP_INSIGHTS: ${{secrets.APP_INSIGHTS}}
      AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}  
      AZURE_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
